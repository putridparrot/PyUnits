# <auto-generated>
# This code was generated by the UnitCodeGenerator tool
#
# Changes to this file will be lost if the code is regenerated
# </auto-generated>

import unittest
import units.time.nanoseconds

class TestNanosecondsMethods(unittest.TestCase):

	def test_convert_known_nanoseconds_to_microseconds(self):
		self.assertAlmostEqual(1.234, units.time.nanoseconds.to_microseconds(1234.0), places=1)
		self.assertAlmostEqual(0.0909, units.time.nanoseconds.to_microseconds(90.9), places=1)
		self.assertAlmostEqual(70.0, units.time.nanoseconds.to_microseconds(70000.0), places=1)

	def test_convert_known_nanoseconds_to_milliseconds(self):
		self.assertAlmostEqual(0.07, units.time.nanoseconds.to_milliseconds(70000.0), places=1)
		self.assertAlmostEqual(0.123456, units.time.nanoseconds.to_milliseconds(123456.0), places=1)
		self.assertAlmostEqual(0.9009, units.time.nanoseconds.to_milliseconds(900900.0), places=1)

	def test_convert_known_nanoseconds_to_seconds(self):
		self.assertAlmostEqual(0.9, units.time.nanoseconds.to_seconds(900000000.0), places=1)
		self.assertAlmostEqual(0.123456789, units.time.nanoseconds.to_seconds(123456789.0), places=1)
		self.assertAlmostEqual(0.8004007, units.time.nanoseconds.to_seconds(800400700.0), places=1)

	def test_convert_known_nanoseconds_to_minutes(self):
		self.assertAlmostEqual(0.0205761315, units.time.nanoseconds.to_minutes(1234567890.0), places=1)
		self.assertAlmostEqual(0.0133400116667, units.time.nanoseconds.to_minutes(800400700.0), places=1)
		self.assertAlmostEqual(0.0133350133333, units.time.nanoseconds.to_minutes(800100800.0), places=1)

	def test_convert_known_nanoseconds_to_hours(self):
		self.assertAlmostEqual(0.3429355250341667, units.time.nanoseconds.to_hours(1234567890123.0), places=1)
		self.assertAlmostEqual(0.250222416833333, units.time.nanoseconds.to_hours(900800700600.0), places=1)
		self.assertAlmostEqual(0.018521608055278, units.time.nanoseconds.to_hours(66677788999.0), places=1)

if __name__ == '__main__':
    unittest.main()
