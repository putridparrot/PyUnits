# <auto-generated>
# This code was generated by the UnitCodeGenerator tool
#
# Changes to this file will be lost if the code is regenerated
# </auto-generated>

import unittest
import units.data_storage.megabits

class TestMegabitsMethods(unittest.TestCase):

	def test_convert_known_megabits_to_bits(self):
		self.assertAlmostEqual(340000.0, units.data_storage.megabits.to_bits(0.34), places=1)
		self.assertAlmostEqual(9120000.0, units.data_storage.megabits.to_bits(9.12), places=1)
		self.assertAlmostEqual(987000.0, units.data_storage.megabits.to_bits(0.987), places=1)

	def test_convert_known_megabits_to_kilobits(self):
		self.assertAlmostEqual(770.0, units.data_storage.megabits.to_kilobits(0.77), places=1)
		self.assertAlmostEqual(5000.0, units.data_storage.megabits.to_kilobits(5.0), places=1)
		self.assertAlmostEqual(987.0, units.data_storage.megabits.to_kilobits(0.987), places=1)

	def test_convert_known_megabits_to_gigabits(self):
		self.assertAlmostEqual(0.9, units.data_storage.megabits.to_gigabits(900.0), places=1)
		self.assertAlmostEqual(12.345, units.data_storage.megabits.to_gigabits(12345.0), places=1)
		self.assertAlmostEqual(0.1891, units.data_storage.megabits.to_gigabits(189.1), places=1)

	def test_convert_known_megabits_to_terabits(self):
		self.assertAlmostEqual(100.2003, units.data_storage.megabits.to_terabits(100200300.0), places=1)
		self.assertAlmostEqual(99.887777, units.data_storage.megabits.to_terabits(99887777.0), places=1)
		self.assertAlmostEqual(0.080009, units.data_storage.megabits.to_terabits(80009.0), places=1)

	def test_convert_known_megabits_to_kilobytes(self):
		self.assertAlmostEqual(1125.0, units.data_storage.megabits.to_kilobytes(9.0), places=1)
		self.assertAlmostEqual(153.75, units.data_storage.megabits.to_kilobytes(1.23), places=1)
		self.assertAlmostEqual(12262.5, units.data_storage.megabits.to_kilobytes(98.1), places=1)

	def test_convert_known_megabits_to_megabytes(self):
		self.assertAlmostEqual(12.2625, units.data_storage.megabits.to_megabytes(98.1), places=1)
		self.assertAlmostEqual(1.3625, units.data_storage.megabits.to_megabytes(10.9), places=1)
		self.assertAlmostEqual(111.015375, units.data_storage.megabits.to_megabytes(888.123), places=1)

	def test_convert_known_megabits_to_gigabytes(self):
		self.assertAlmostEqual(0.1125, units.data_storage.megabits.to_gigabytes(900.0), places=1)
		self.assertAlmostEqual(1.265375, units.data_storage.megabits.to_gigabytes(10123.0), places=1)
		self.assertAlmostEqual(1.2485, units.data_storage.megabits.to_gigabytes(9988.0), places=1)

	def test_convert_known_megabits_to_terabytes(self):
		self.assertAlmostEqual(0.124859625, units.data_storage.megabits.to_terabytes(998877.0), places=1)
		self.assertAlmostEqual(12.5250375, units.data_storage.megabits.to_terabytes(100200400.0), places=1)
		self.assertAlmostEqual(1.126109625, units.data_storage.megabits.to_terabytes(9008877.0), places=1)

	def test_convert_known_megabits_to_kibibits(self):
		self.assertAlmostEqual(11718.756, units.data_storage.megabits.to_kibibits(12.0), places=1)
		self.assertAlmostEqual(878.906, units.data_storage.megabits.to_kibibits(0.9), places=1)
		self.assertAlmostEqual(1201.172, units.data_storage.megabits.to_kibibits(1.23), places=1)

	def test_convert_known_megabits_to_mebibits(self):
		self.assertAlmostEqual(4.29153, units.data_storage.megabits.to_mebibits(4.5), places=1)
		self.assertAlmostEqual(0.762939, units.data_storage.megabits.to_mebibits(0.8), places=1)
		self.assertAlmostEqual(858.307, units.data_storage.megabits.to_mebibits(900.0), places=1)

if __name__ == '__main__':
    unittest.main()
